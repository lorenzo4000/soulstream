#ifndef SS_MESSAGE_H
#define SS_MESSAGE_H

#include <stdlib.h>
#include <zlib.h>

typedef unsigned int MessageCode;
typedef enum MessageType {
	MESSAGE_TYPE_SERVER,
	MESSAGE_TYPE_PEER,
	MESSAGE_TYPE_FILE,
	MESSAGE_TYPE_DISTRIBUTED,
	MESSAGE_TYPE_PEERINIT
} MessageType;

#define MESSAGE_CODE(type, code) \
	((MessageCode)code) | (type << (sizeof(MessageCode) * 8 - 3))

#define MESSAGE_CODE_TYPE(code) \
	((MessageCode)code) >> (sizeof(MessageCode) * 8 - 3)

#define MESSAGE_CODE_CODE(code) \
	(((MessageCode)code) << (3)) \
						 >> (3)

#define SERVER_LOGIN MESSAGE_CODE(MESSAGE_TYPE_SERVER, 						 1)
#define SERVER_SET_LISTEN_PORT MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				 2)
#define SERVER_GET_PEER_ADDRESS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			 3)
#define SERVER_WATCH_USER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					 5)
#define SERVER_UNWATCH_USER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				 6)
#define SERVER_GET_USER_STATUS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				 7)
#define SERVER_SAY_IN_CHAT_ROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			13)
#define SERVER_JOIN_ROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER,  					14)
#define SERVER_LEAVE_ROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					15)
#define SERVER_USER_JOINEDROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				16)
#define SERVER_USER_LEFT_ROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				17)
#define SERVER_CONNECT_TO_PEER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				18)
#define SERVER_PRIVATEMESSAGES MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				22)
#define SERVER_ACKNOWLEDGE_PRIVATE_MESSAGE MESSAGE_CODE(MESSAGE_TYPE_SERVER,  23)
#define SERVER_FILE_SEARCH_ROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			25)
#define SERVER_FILE_SEARCH MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					26)
#define SERVER_SET_ONLINE_STATUS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			28)
#define SERVER_PING MESSAGE_CODE(MESSAGE_TYPE_SERVER, 						32)
#define SERVER_SEND_CONNECT_TOKEN MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			33)
#define SERVER_SEND_DOWNLOAD_SPEED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			34)
#define SERVER_SHARED_FOLDERS_AND_FILES MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	35)
#define SERVER_GET_USER_STATS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				36)
#define SERVER_QUEUED_DOWNLOADS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			40)
#define SERVER_KICKED_FROM_SERVER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			41)
#define SERVER_USER_SEARCH MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					42)
#define SERVER_INTEREST_ADD MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				51)
#define SERVER_INTEREST_REMOVE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				52)
#define SERVER_GET_RECOMMENDATIONS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			54)
#define SERVER_GET_GLOBAL_RECOMMENDATIONS MESSAGE_CODE(MESSAGE_TYPE_SERVER,   56)
#define SERVER_GET_USER_INTERESTS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			57)
#define SERVER_ADMIN_COMMAND MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				58)
#define SERVER_PLACE_IN_LINE_RESPONSE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 		60)
#define SERVER_ROOM_ADDED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					62)
#define SERVER_ROOM_REMOVED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				63)
#define SERVER_ROOM_LIST MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					64)
#define SERVER_EXACT_FILE_SEARCH MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			65)
#define SERVER_GLOBAL_ADMIN_MESSAGE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 		66)
#define SERVER_GLOBAL_USER_LIST MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			67)
#define SERVER_TUNNELED_MESSAGE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			68)
#define SERVER_PRIVILEGED_USERS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			69)
#define SERVER_HAVE_NO_PARENTS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				71)
#define SERVER_PARENT_IP MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					73)
#define SERVER_PARENT_MIN_SPEED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			83)
#define SERVER_PARENT_SPEED_RATIO MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			84)
#define SERVER_PARENT_INACTIVITY_TIMEOUT MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	86)
#define SERVER_SEARCH_INACTIVITY_TIMEOUT MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	87)
#define SERVER_MINIMUM_PARENTS_IN_CACHE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	88)
#define SERVER_DISTRIBUTED_PING_INTERVAL MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	90)
#define SERVER_ADD_PRIVILEGED_USER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			91)
#define SERVER_CHECK_PRIVILEGES MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			92)
#define SERVER_EMBEDDED_MESSAGE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			93)
#define SERVER_ACCEPT_CHILDREN MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				100)
#define SERVER_POSSIBLE_PARENTS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			102)
#define SERVER_WISHLIST_SEARCH MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				103)
#define SERVER_WISHLIST_INTERVAL MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			104)
#define SERVER_GET_SIMILAR_USERS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			110)
#define SERVER_GET_ITEM_RECOMMENDATIONS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	111)
#define SERVER_GET_ITEM_SIMILAR_USERS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 		112)
#define SERVER_ROOM_TICKERS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				113)
#define SERVER_ROOM_TICKER_ADD MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				114)
#define SERVER_ROOM_TICKER_REMOVE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			115)
#define SERVER_SET_ROOM_TICKER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				116)
#define SERVER_HATED_INTEREST_ADD MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			117)
#define SERVER_HATED_INTEREST_REMOVE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 		118)
#define SERVER_ROOM_SEARCH MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					120)
#define SERVER_SEND_UPLOAD_SPEED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			121)
#define SERVER_USER_PRIVILEGES MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				122)
#define SERVER_GIVE_PRIVILEGES MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				123)        
#define SERVER_NOTIFY_PRIVILEGES MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			124)
#define SERVER_ACKNOWLEDGE_NOTIFY_PRIVILEGES MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	125)
#define SERVER_BRANCH_LEVEL MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				126)
#define SERVER_BRANCH_ROOT MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					127)
#define SERVER_CHILD_DEPTH MESSAGE_CODE(MESSAGE_TYPE_SERVER, 					129)
#define SERVER_RESET_DISTRIBUTED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			130)
#define SERVER_PRIVATE_ROOM_USERS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			133)
#define SERVER_PRIVATE_ROOM_ADD_USER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 		134)
#define SERVER_PRIVATE_ROOM_REMOVE_USER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	135)
#define SERVER_PRIVATE_ROOM_DROP_MEMBERSHIP MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	136)
#define SERVER_PRIVATE_ROOM_DROP_OWNERSHIP MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	137)
#define SERVER_PRIVATE_ROOM_UNKNOWN MESSAGE_CODE(MESSAGE_TYPE_SERVER, 		138)
#define SERVER_PRIVATE_ROOM_ADDED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			139)
#define SERVER_PRIVATE_ROOM_REMOVED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 		140)
#define SERVER_PRIVATE_ROOM_TOGGLE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			141)
#define SERVER_NEW_PASSWORD MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				142)
#define SERVER_PRIVATE_ROOM_ADD_OPERATOR MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	143)
#define SERVER_PRIVATE_ROOM_REMOVE_OPERATOR MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	144)
#define SERVER_PRIVATE_ROOM_OPERATOR_ADDED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	145)
#define SERVER_PRIVATE_ROOM_OPERATOR_REMOVED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 	146)
#define SERVER_PRIVATE_ROOM_OWNED MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			148)
#define SERVER_MESSAGE_USERS MESSAGE_CODE(MESSAGE_TYPE_SERVER, 				149)
#define SERVER_JOIN_GLOBAL_ROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			150)
#define SERVER_LEAVE_GLOBAL_ROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			151)
#define SERVER_GLOBAL_ROOM_MESSAGE MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			152)
#define SERVER_RELATED_SEARCHES MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			153)
#define SERVER_CANT_CONNECT_TO_PEER MESSAGE_CODE(MESSAGE_TYPE_SERVER, 		1001)
#define SERVER_CANT_CREATE_ROOM MESSAGE_CODE(MESSAGE_TYPE_SERVER, 			1003)

#define PEER_PRIVATE_MESSAGE MESSAGE_CODE(MESSAGE_TYPE_PEER, 				1)
#define PEER_SHARED_FILE_LIST_REQUEST MESSAGE_CODE(MESSAGE_TYPE_PEER, 	4)
#define PEER_SHARED_FILE_LIST_RESPONSE MESSAGE_CODE(MESSAGE_TYPE_PEER, 	5)
#define PEER_FILE_SEARCH_REQUEST MESSAGE_CODE(MESSAGE_TYPE_PEER, 			8)
#define PEER_FILE_SEARCH_RESPONSE MESSAGE_CODE(MESSAGE_TYPE_PEER, 		9)
#define PEER_ROOM_INVITATION MESSAGE_CODE(MESSAGE_TYPE_PEER, 				10)
#define PEER_CANCELLED_QUEUED_TRANSFER MESSAGE_CODE(MESSAGE_TYPE_PEER, 	14)
#define PEER_USER_INFO_REQUEST MESSAGE_CODE(MESSAGE_TYPE_PEER, 			15)
#define PEER_USER_INFO_RESPONSE MESSAGE_CODE(MESSAGE_TYPE_PEER, 			16)
#define PEER_SEND_CONNECT_TOKEN MESSAGE_CODE(MESSAGE_TYPE_PEER, 			33)
#define PEER_MOVE_DOWNLOAD_TO_TOP MESSAGE_CODE(MESSAGE_TYPE_PEER, 		34)
#define PEER_FOLDER_CONTENTS_REQUEST MESSAGE_CODE(MESSAGE_TYPE_PEER, 		36)
#define PEER_FOLDER_CONTENTS_RESPONSE MESSAGE_CODE(MESSAGE_TYPE_PEER, 	37)
#define PEER_TRANSFER_REQUEST MESSAGE_CODE(MESSAGE_TYPE_PEER, 			40)
#define PEER_DOWNLOAD_RESPONSE MESSAGE_CODE(MESSAGE_TYPE_PEER, 			41)
#define PEER_UPLOAD_RESPONSE MESSAGE_CODE(MESSAGE_TYPE_PEER, 				41)
#define PEER_UPLOAD_PLACEHOLD MESSAGE_CODE(MESSAGE_TYPE_PEER, 			42)
#define PEER_QUEUE_UPLOAD MESSAGE_CODE(MESSAGE_TYPE_PEER, 				43)
#define PEER_PLACE_IN_QUEUE_RESPONSE MESSAGE_CODE(MESSAGE_TYPE_PEER, 		44)
#define PEER_UPLOAD_FAILED MESSAGE_CODE(MESSAGE_TYPE_PEER, 				46)
#define PEER_EXACT_FILE_SEARCH_REQUEST MESSAGE_CODE(MESSAGE_TYPE_PEER, 	47)
#define PEER_QUEUED_DOWNLOADS MESSAGE_CODE(MESSAGE_TYPE_PEER, 			48)
#define PEER_INDIRECT_FILE_SEARCH_REQUEST MESSAGE_CODE(MESSAGE_TYPE_PEER, 	49)
#define PEER_UPLOAD_DENIED MESSAGE_CODE(MESSAGE_TYPE_PEER, 				50)
#define PEER_PLACE_IN_QUEUE_REQUEST MESSAGE_CODE(MESSAGE_TYPE_PEER, 		51)
#define PEER_UPLOAD_QUEUE_NOTIFICATION MESSAGE_CODE(MESSAGE_TYPE_PEER, 	52)

#define DISTRIBUTED_PING MESSAGE_CODE(MESSAGE_TYPE_DISTRIBUTED, 						0)
#define DISTRIBUTED_SEARCH_REQUEST MESSAGE_CODE(MESSAGE_TYPE_DISTRIBUTED,  				3)
#define DISTRIBUTED_BRANCH_LEVEL MESSAGE_CODE(MESSAGE_TYPE_DISTRIBUTED,  				4)
#define DISTRIBUTED_BRANCH_ROOT MESSAGE_CODE(MESSAGE_TYPE_DISTRIBUTED,  				5)
#define DISTRIBUTED_CHILD_DEPTH MESSAGE_CODE(MESSAGE_TYPE_DISTRIBUTED,  				7)
#define DISTRIBUTED_EMBEDDED_MESSAGE MESSAGE_CODE(MESSAGE_TYPE_DISTRIBUTED,  			93)

#define PEERINIT_PIERCE_FIREWALL MESSAGE_CODE(MESSAGE_TYPE_PEERINIT, 		0)
#define PEERINIT_PEER_INIT MESSAGE_CODE(MESSAGE_TYPE_PEERINIT, 				1)

typedef unsigned int MessageLength;
typedef struct MessageBuffer {
	MessageLength w;
	MessageLength r;

	size_t size;
	unsigned char* buffer;
} MessageBuffer;


MessageBuffer new_message_buffer(size_t);
int message_buffer_resize(MessageBuffer*, size_t);
MessageLength message_buffer_len(MessageBuffer);
int message_buffer_empty(MessageBuffer*);

int p(MessageBuffer* buffer, unsigned char x);
int p32(MessageBuffer* buffer, unsigned int x);
int p64(MessageBuffer* buffer, unsigned long long x);
int pstring(MessageBuffer* buffer, char* x, unsigned int x_len);
int pcode(MessageBuffer* buffer, MessageCode code);

int u(MessageBuffer* buffer, unsigned char *x);
int u32(MessageBuffer* buffer, unsigned int *x);
int u64(MessageBuffer* buffer, unsigned long long *x);
int ustring(MessageBuffer* buffer, char* x, unsigned int x_len);
int ucode(MessageBuffer* buffer, MessageType type, MessageCode *code);

MessageBuffer* send_message(MessageBuffer* buffer, int client_fd); 
int read_message(MessageBuffer* buffer, int client_fd); 
int compress_message(MessageBuffer* buffer);
int decompress_message(MessageBuffer* buffer);


#endif // SS_MESSAGE_H
